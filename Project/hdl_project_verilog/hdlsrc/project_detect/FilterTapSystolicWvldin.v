// -------------------------------------------------------------
// 
// File Name: hdl_project_verilog\hdlsrc\project_detect\FilterTapSystolicWvldin.v
// Created: 2021-02-13 17:18:24
// 
// Generated by MATLAB 9.9 and HDL Coder 3.17
// 
// -------------------------------------------------------------


// -------------------------------------------------------------
// 
// Module: FilterTapSystolicWvldin
// Source Path: project_detect/Pulse Detector/Discrete FIR Filter HDL Optimized/FilterBank/subFilter/FilterTapSystolicWvldin
// Hierarchy Level: 4
// 
// -------------------------------------------------------------

`timescale 1 ns / 1 ns

module FilterTapSystolicWvldin
          (clk,
           reset,
           enb,
           dinReg2_0_re,
           coefIn_0,
           addin,
           dinRegVld,
           syncReset,
           dinDly2,
           tapout,
           tapoutVld);


  input   clk;
  input   reset;
  input   enb;
  input   signed [16:0] dinReg2_0_re;  // sfix17_En14
  input   signed [18:0] coefIn_0;  // sfix19_En23
  input   signed [39:0] addin;  // sfix40_En37
  input   dinRegVld;
  input   syncReset;
  output  signed [16:0] dinDly2;  // sfix17_En14
  output  signed [39:0] tapout;  // sfix40_En37
  output  tapoutVld;


  reg signed [16:0] fTap_din_reg1;  // sfix17
  reg signed [18:0] fTap_coef_reg1;  // sfix19
  reg signed [16:0] fTap_din_reg2;  // sfix17
  reg signed [18:0] fTap_coef_reg2;  // sfix19
  reg signed [35:0] fTap_mult_reg;  // sfix36
  reg signed [39:0] fTap_addout_reg;  // sfix40
  reg signed [16:0] fTap_din_reg1_next;  // sfix17_En14
  reg signed [18:0] fTap_coef_reg1_next;  // sfix19_En23
  reg signed [16:0] fTap_din_reg2_next;  // sfix17_En14
  reg signed [18:0] fTap_coef_reg2_next;  // sfix19_En23
  reg signed [35:0] fTap_mult_reg_next;  // sfix36_En37
  reg signed [39:0] fTap_addout_reg_next;  // sfix40_En37
  reg signed [16:0] dinDly2_1;  // sfix17_En14
  reg signed [39:0] tapout_1;  // sfix40_En37
  reg  [0:3] intdelay_reg;  // ufix1 [4]
  wire [0:3] intdelay_reg_next;  // ufix1 [4]
  reg signed [39:0] fTap_add_cast;  // sfix40_En37

  initial begin
    fTap_din_reg1 = 17'sb00000000000000000;
    fTap_coef_reg1 = 19'sb0000000000000000000;
    fTap_din_reg2 = 17'sb00000000000000000;
    fTap_coef_reg2 = 19'sb0000000000000000000;
    fTap_mult_reg = 36'sh000000000;
    fTap_addout_reg = 40'sh0000000000;
  end

  // FilterTapSystlicWvldIn
  always @(posedge clk)
    begin : fTap_process
      if (enb) begin
        fTap_din_reg1 <= fTap_din_reg1_next;
        fTap_coef_reg1 <= fTap_coef_reg1_next;
        fTap_din_reg2 <= fTap_din_reg2_next;
        fTap_coef_reg2 <= fTap_coef_reg2_next;
        fTap_mult_reg <= fTap_mult_reg_next;
        fTap_addout_reg <= fTap_addout_reg_next;
      end
    end

  always @(addin, coefIn_0, dinReg2_0_re, dinRegVld, fTap_addout_reg, fTap_coef_reg1,
       fTap_coef_reg2, fTap_din_reg1, fTap_din_reg2, fTap_mult_reg) begin
    fTap_add_cast = 40'sh0000000000;
    fTap_din_reg1_next = fTap_din_reg1;
    fTap_coef_reg1_next = fTap_coef_reg1;
    fTap_din_reg2_next = fTap_din_reg2;
    fTap_coef_reg2_next = fTap_coef_reg2;
    fTap_mult_reg_next = fTap_mult_reg;
    fTap_addout_reg_next = fTap_addout_reg;
    if (dinRegVld) begin
      fTap_add_cast = {{4{fTap_mult_reg[35]}}, fTap_mult_reg};
      fTap_addout_reg_next = fTap_add_cast + addin;
      fTap_mult_reg_next = fTap_din_reg2 * fTap_coef_reg2;
      fTap_din_reg2_next = fTap_din_reg1;
      fTap_coef_reg2_next = fTap_coef_reg1;
      fTap_din_reg1_next = dinReg2_0_re;
      fTap_coef_reg1_next = coefIn_0;
    end
    dinDly2_1 = fTap_din_reg2;
    tapout_1 = fTap_addout_reg;
  end



  always @(posedge clk)
    begin : intdelay_process
      if (reset == 1'b1) begin
        intdelay_reg[0] <= 1'b0;
        intdelay_reg[1] <= 1'b0;
        intdelay_reg[2] <= 1'b0;
        intdelay_reg[3] <= 1'b0;
      end
      else begin
        if (enb) begin
          intdelay_reg[0] <= intdelay_reg_next[0];
          intdelay_reg[1] <= intdelay_reg_next[1];
          intdelay_reg[2] <= intdelay_reg_next[2];
          intdelay_reg[3] <= intdelay_reg_next[3];
        end
      end
    end

  assign tapoutVld = intdelay_reg[3];
  assign intdelay_reg_next[0] = dinRegVld;
  assign intdelay_reg_next[1] = intdelay_reg[0];
  assign intdelay_reg_next[2] = intdelay_reg[1];
  assign intdelay_reg_next[3] = intdelay_reg[2];



  assign dinDly2 = dinDly2_1;

  assign tapout = tapout_1;

endmodule  // FilterTapSystolicWvldin

