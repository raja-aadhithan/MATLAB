-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj\hdlsrc\project_detect\FilterBank.vhd
-- Created: 2021-02-13 15:14:38
-- 
-- Generated by MATLAB 9.9 and HDL Coder 3.17
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: FilterBank
-- Source Path: project_detect/Pulse Detector/Discrete FIR Filter HDL Optimized/FilterBank
-- Hierarchy Level: 2
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;
USE work.Pulse_Detector_pkg.ALL;

ENTITY FilterBank IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        enb                               :   IN    std_logic;
        dataIn_re                         :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
        dataIn_im                         :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
        validIn                           :   IN    std_logic;
        dataOut_re                        :   OUT   std_logic_vector(39 DOWNTO 0);  -- sfix40_En37
        dataOut_im                        :   OUT   std_logic_vector(39 DOWNTO 0);  -- sfix40_En37
        validOut                          :   OUT   std_logic
        );
END FilterBank;


ARCHITECTURE rtl OF FilterBank IS

  -- Component Declarations
  COMPONENT FilterCoef
    PORT( CoefOutP                        :   OUT   vector_of_std_logic_vector19(0 TO 63)  -- sfix19_En23 [64]
          );
  END COMPONENT;

  COMPONENT subFilter
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          dinReg2_0_re                    :   IN    std_logic_vector(16 DOWNTO 0);  -- sfix17_En14
          coefIn                          :   IN    vector_of_std_logic_vector19(0 TO 63);  -- sfix19_En23 [64]
          dinRegVld                       :   IN    std_logic;
          syncReset                       :   IN    std_logic;
          dout_1_re                       :   OUT   std_logic_vector(39 DOWNTO 0);  -- sfix40_En37
          doutVld                         :   OUT   std_logic
          );
  END COMPONENT;

  COMPONENT FilterCoef_block1
    PORT( CoefOutI                        :   OUT   vector_of_std_logic_vector19(0 TO 63)  -- sfix19_En23 [64]
          );
  END COMPONENT;

  COMPONENT FilterCoef_block
    PORT( CoefOutS                        :   OUT   vector_of_std_logic_vector19(0 TO 63)  -- sfix19_En23 [64]
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : FilterCoef
    USE ENTITY work.FilterCoef(rtl);

  FOR ALL : subFilter
    USE ENTITY work.subFilter(rtl);

  FOR ALL : FilterCoef_block1
    USE ENTITY work.FilterCoef_block1(rtl);

  FOR ALL : FilterCoef_block
    USE ENTITY work.FilterCoef_block(rtl);

  -- Signals
  SIGNAL syncReset                        : std_logic;
  SIGNAL dinRegVld                        : std_logic;
  SIGNAL dataIn_re_signed                 : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dataIn_im_signed                 : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dinReg_0_re                      : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dinReg_cast_0_re                 : signed(16 DOWNTO 0);  -- sfix17_En14
  SIGNAL dinReg2_0_re                     : signed(16 DOWNTO 0);  -- sfix17_En14
  SIGNAL CoefOutP                         : vector_of_std_logic_vector19(0 TO 63);  -- ufix19 [64]
  SIGNAL dinReg2Vld                       : std_logic;
  SIGNAL dout_1_P                         : std_logic_vector(39 DOWNTO 0);  -- ufix40
  SIGNAL doutVld                          : std_logic;
  SIGNAL dout_1_P_signed                  : signed(39 DOWNTO 0);  -- sfix40_En37
  SIGNAL dinReg_0_im                      : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL adder_add_cast                   : signed(16 DOWNTO 0);  -- sfix17_En14
  SIGNAL adder_add_cast_1                 : signed(16 DOWNTO 0);  -- sfix17_En14
  SIGNAL dinRealPImag_0                   : signed(16 DOWNTO 0);  -- sfix17_En14
  SIGNAL dinReg2_0_P                      : signed(16 DOWNTO 0);  -- sfix17_En14
  SIGNAL CoefOutI                         : vector_of_std_logic_vector19(0 TO 63);  -- ufix19 [64]
  SIGNAL dout_1_I                         : std_logic_vector(39 DOWNTO 0);  -- ufix40
  SIGNAL doutVld_I                        : std_logic;
  SIGNAL dout_1_I_signed                  : signed(39 DOWNTO 0);  -- sfix40_En37
  SIGNAL subtractor_sub_cast              : signed(40 DOWNTO 0);  -- sfix41_En37
  SIGNAL subtractor_sub_cast_1            : signed(40 DOWNTO 0);  -- sfix41_En37
  SIGNAL dout_1_r                         : signed(40 DOWNTO 0);  -- sfix41_En37
  SIGNAL dout_1_cast_r                    : signed(39 DOWNTO 0);  -- sfix40_En37
  SIGNAL dout_1_re                        : signed(39 DOWNTO 0);  -- sfix40_En37
  SIGNAL dinReg2_cast_0_im                : signed(16 DOWNTO 0);  -- sfix17_En14
  SIGNAL dinReg2_0_im                     : signed(16 DOWNTO 0);  -- sfix17_En14
  SIGNAL CoefOutS                         : vector_of_std_logic_vector19(0 TO 63);  -- ufix19 [64]
  SIGNAL dout_1_M                         : std_logic_vector(39 DOWNTO 0);  -- ufix40
  SIGNAL doutVld_M                        : std_logic;
  SIGNAL dout_1_M_signed                  : signed(39 DOWNTO 0);  -- sfix40_En37
  SIGNAL adder_add_cast_2                 : signed(40 DOWNTO 0);  -- sfix41_En37
  SIGNAL adder_add_cast_3                 : signed(40 DOWNTO 0);  -- sfix41_En37
  SIGNAL dout_1_i_1                       : signed(40 DOWNTO 0);  -- sfix41_En37
  SIGNAL dout_1_cast_i                    : signed(39 DOWNTO 0);  -- sfix40_En37
  SIGNAL dout_1_im                        : signed(39 DOWNTO 0);  -- sfix40_En37
  SIGNAL doutVldReg                       : std_logic;

BEGIN
  u_CoefTableP_1 : FilterCoef
    PORT MAP( CoefOutP => CoefOutP  -- sfix19_En23 [64]
              );

  u_subFilter_1_reP : subFilter
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              dinReg2_0_re => std_logic_vector(dinReg2_0_re),  -- sfix17_En14
              coefIn => CoefOutP,  -- sfix19_En23 [64]
              dinRegVld => dinReg2Vld,
              syncReset => syncReset,
              dout_1_re => dout_1_P,  -- sfix40_En37
              doutVld => doutVld
              );

  u_CoefTableI_1 : FilterCoef_block1
    PORT MAP( CoefOutI => CoefOutI  -- sfix19_En23 [64]
              );

  u_subFilter_1_im : subFilter
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              dinReg2_0_re => std_logic_vector(dinReg2_0_P),  -- sfix17_En14
              coefIn => CoefOutI,  -- sfix19_En23 [64]
              dinRegVld => dinReg2Vld,
              syncReset => syncReset,
              dout_1_re => dout_1_I,  -- sfix40_En37
              doutVld => doutVld_I
              );

  u_CoefTableS_1 : FilterCoef_block
    PORT MAP( CoefOutS => CoefOutS  -- sfix19_En23 [64]
              );

  u_subFilter_1_reS : subFilter
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              dinReg2_0_re => std_logic_vector(dinReg2_0_im),  -- sfix17_En14
              coefIn => CoefOutS,  -- sfix19_En23 [64]
              dinRegVld => dinReg2Vld,
              syncReset => syncReset,
              dout_1_re => dout_1_M,  -- sfix40_En37
              doutVld => doutVld_M
              );

  syncReset <= '0';

  intdelay_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        dinRegVld <= '0';
      ELSIF enb = '1' THEN
        IF syncReset = '1' THEN
          dinRegVld <= '0';
        ELSE 
          dinRegVld <= validIn;
        END IF;
      END IF;
    END IF;
  END PROCESS intdelay_process;


  dataIn_re_signed <= signed(dataIn_re);

  intdelay_1_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        dinReg_0_re <= to_signed(16#0000#, 16);
      ELSIF enb = '1' THEN
        IF syncReset = '1' THEN
          dinReg_0_re <= to_signed(16#0000#, 16);
        ELSIF validIn = '1' THEN
          dinReg_0_re <= dataIn_re_signed;
        END IF;
      END IF;
    END IF;
  END PROCESS intdelay_1_process;


  dinReg_cast_0_re <= resize(dinReg_0_re, 17);

  intdelay_2_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        dinReg2_0_re <= to_signed(16#00000#, 17);
      ELSIF enb = '1' THEN
        IF syncReset = '1' THEN
          dinReg2_0_re <= to_signed(16#00000#, 17);
        ELSIF dinRegVld = '1' THEN
          dinReg2_0_re <= dinReg_cast_0_re;
        END IF;
      END IF;
    END IF;
  END PROCESS intdelay_2_process;


  intdelay_3_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        dinReg2Vld <= '0';
      ELSIF enb = '1' THEN
        IF syncReset = '1' THEN
          dinReg2Vld <= '0';
        ELSE 
          dinReg2Vld <= dinRegVld;
        END IF;
      END IF;
    END IF;
  END PROCESS intdelay_3_process;


  dout_1_P_signed <= signed(dout_1_P);

  dataIn_im_signed <= signed(dataIn_im);

  intdelay_4_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        dinReg_0_im <= to_signed(16#0000#, 16);
      ELSIF enb = '1' THEN
        IF syncReset = '1' THEN
          dinReg_0_im <= to_signed(16#0000#, 16);
        ELSIF validIn = '1' THEN
          dinReg_0_im <= dataIn_im_signed;
        END IF;
      END IF;
    END IF;
  END PROCESS intdelay_4_process;


  adder_add_cast <= resize(dinReg_0_re, 17);
  adder_add_cast_1 <= resize(dinReg_0_im, 17);
  dinRealPImag_0 <= adder_add_cast + adder_add_cast_1;

  intdelay_5_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        dinReg2_0_P <= to_signed(16#00000#, 17);
      ELSIF enb = '1' THEN
        IF syncReset = '1' THEN
          dinReg2_0_P <= to_signed(16#00000#, 17);
        ELSIF dinRegVld = '1' THEN
          dinReg2_0_P <= dinRealPImag_0;
        END IF;
      END IF;
    END IF;
  END PROCESS intdelay_5_process;


  dout_1_I_signed <= signed(dout_1_I);

  subtractor_sub_cast <= resize(dout_1_P_signed, 41);
  subtractor_sub_cast_1 <= resize(dout_1_I_signed, 41);
  dout_1_r <= subtractor_sub_cast - subtractor_sub_cast_1;

  dout_1_cast_r <= dout_1_r(39 DOWNTO 0);

  intdelay_6_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        dout_1_re <= to_signed(0, 40);
      ELSIF enb = '1' THEN
        IF syncReset = '1' THEN
          dout_1_re <= to_signed(0, 40);
        ELSE 
          dout_1_re <= dout_1_cast_r;
        END IF;
      END IF;
    END IF;
  END PROCESS intdelay_6_process;


  dataOut_re <= std_logic_vector(dout_1_re);

  dinReg2_cast_0_im <= resize(dinReg_0_im, 17);

  intdelay_7_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        dinReg2_0_im <= to_signed(16#00000#, 17);
      ELSIF enb = '1' THEN
        IF syncReset = '1' THEN
          dinReg2_0_im <= to_signed(16#00000#, 17);
        ELSIF dinRegVld = '1' THEN
          dinReg2_0_im <= dinReg2_cast_0_im;
        END IF;
      END IF;
    END IF;
  END PROCESS intdelay_7_process;


  dout_1_M_signed <= signed(dout_1_M);

  adder_add_cast_2 <= resize(dout_1_M_signed, 41);
  adder_add_cast_3 <= resize(dout_1_I_signed, 41);
  dout_1_i_1 <= adder_add_cast_2 + adder_add_cast_3;

  dout_1_cast_i <= dout_1_i_1(39 DOWNTO 0);

  intdelay_8_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        dout_1_im <= to_signed(0, 40);
      ELSIF enb = '1' THEN
        IF syncReset = '1' THEN
          dout_1_im <= to_signed(0, 40);
        ELSE 
          dout_1_im <= dout_1_cast_i;
        END IF;
      END IF;
    END IF;
  END PROCESS intdelay_8_process;


  dataOut_im <= std_logic_vector(dout_1_im);

  intdelay_9_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        doutVldReg <= '0';
      ELSIF enb = '1' THEN
        IF syncReset = '1' THEN
          doutVldReg <= '0';
        ELSE 
          doutVldReg <= doutVld;
        END IF;
      END IF;
    END IF;
  END PROCESS intdelay_9_process;


  validOut <= doutVldReg;

END rtl;

